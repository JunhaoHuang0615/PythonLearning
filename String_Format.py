print("{0} love {1} .{2}".format("I","you","com"))
print("{a} love {b} .{c}".format(a="I",b="you",c="com"))
print("{0} love {b} .{1}".format("I","you",b="com")) #位置参数，如{0}, {1} 必须在关键字参数{b} 之前

print("This is {{0}} but not {0}".format("you")) #如果想输出{0}，则需要用两层大括号
print("{0:.1f}{1}".format(27.89, "GB")) # {0:.1f} 的意思是在0好位置，输出一个.1f 保留一位小数的数字， 1号位是GB

#格式化符号
#   %c 格式化字符及ASCII码
print("这个字符是 %c" %(97))
print ("这些字符是 %c %c 和 %c" %(97,99,100))

#   %s 格式化字符串
print("%c   %s" %(97, "这是a的一行"))

#   %d 格式化整数
print("%d + %d = %d" %(4,5,4+5))

#   %o 格式化无符号八进制数
print("%o" %(10))  #输出10对应的8进制数

#   %x 格式化无符号十六进制数
print("%x" %(10))

#   %X 格式化无符号十六进制数（大写）
print("%X" %(10))
print("%X" % (3))

#   %f 格式化定点数，可指定小数点后面的精度
print("%f" %(27.658)) #默认精确6位
print("%.2f" %(27.658))

#   %e 用科学计数法格式化定点数
print("%e" %(27.658))
#   %E 同上

#   %g 根据值的大小决定用%f或者%e

#   确定一个数的总宽度，并确定小数点的个数
print("%5.2f" %(27.658)) #这里限定了字符串至少要占长度为5，小数点最多2个
print("%5.2f" %(2777.658)) 
print("%5.2f" %(27677.658)) 
print("%5.2f" %(276677.658)) 


print("%10d" %(783.4)) #小数部分会舍去， 且前面会有7个空格，为了占满10位
print("%-10d" %(783.4)) #加一个符号，则为左对齐
print("%+d" %(5)) #加一个正号，则如果是正数则会显示+号
print("%+d" %(-5))

print("%#o" %(108)) #加一个#号则会告诉我们这是一个八进制位或者十六进制位
print("%#X" %(108))

#填充0, 使用了左对齐则0是没有用的
print("%010d" %(1000))

